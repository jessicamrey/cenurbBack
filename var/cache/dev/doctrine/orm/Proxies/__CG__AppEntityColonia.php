<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Colonia extends \App\Entity\Colonia implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'usuario', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'nombre', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'barrio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'calleNumPiso', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'nombreCentro', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'tipoPropiedad', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'tipoEdificio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'locNidos', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'vacio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'ccaa', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'provincia', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'municipio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'otrasEspecies', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'especie', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'visitasColonias', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'temporada'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'usuario', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'nombre', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'barrio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'calleNumPiso', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'nombreCentro', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'tipoPropiedad', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'tipoEdificio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'locNidos', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'vacio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'ccaa', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'provincia', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'municipio', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'otrasEspecies', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'especie', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'visitasColonias', '' . "\0" . 'App\\Entity\\Colonia' . "\0" . 'temporada'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Colonia $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsuario(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsuario', []);

        return parent::getUsuario();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsuario(string $usuario): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsuario', [$usuario]);

        return parent::setUsuario($usuario);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre(string $nombre): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getBarrio(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBarrio', []);

        return parent::getBarrio();
    }

    /**
     * {@inheritDoc}
     */
    public function setBarrio(string $barrio): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBarrio', [$barrio]);

        return parent::setBarrio($barrio);
    }

    /**
     * {@inheritDoc}
     */
    public function getCalleNumPiso(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalleNumPiso', []);

        return parent::getCalleNumPiso();
    }

    /**
     * {@inheritDoc}
     */
    public function setCalleNumPiso(string $calleNumPiso): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCalleNumPiso', [$calleNumPiso]);

        return parent::setCalleNumPiso($calleNumPiso);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreCentro(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreCentro', []);

        return parent::getNombreCentro();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreCentro(string $nombreCentro): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreCentro', [$nombreCentro]);

        return parent::setNombreCentro($nombreCentro);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipoPropiedad(): \App\Entity\TipoPropiedad
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipoPropiedad', []);

        return parent::getTipoPropiedad();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipoPropiedad(\App\Entity\TipoPropiedad $tipoPropiedad): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipoPropiedad', [$tipoPropiedad]);

        return parent::setTipoPropiedad($tipoPropiedad);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipoEdificio(): \App\Entity\TipoEdificio
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipoEdificio', []);

        return parent::getTipoEdificio();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipoEdificio(\App\Entity\TipoEdificio $tipoEdificio): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipoEdificio', [$tipoEdificio]);

        return parent::setTipoEdificio($tipoEdificio);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocNidos(): \App\Entity\LocNidosCol
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocNidos', []);

        return parent::getLocNidos();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocNidos(\App\Entity\LocNidosCol $locNidos): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocNidos', [$locNidos]);

        return parent::setLocNidos($locNidos);
    }

    /**
     * {@inheritDoc}
     */
    public function getVacio(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVacio', []);

        return parent::getVacio();
    }

    /**
     * {@inheritDoc}
     */
    public function setVacio(bool $vacio): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVacio', [$vacio]);

        return parent::setVacio($vacio);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVisitasColonia(\App\Entity\VisitasColonia $visitasColonia): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVisitasColonia', [$visitasColonia]);

        return parent::removeVisitasColonia($visitasColonia);
    }

    /**
     * {@inheritDoc}
     */
    public function getCcaa(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCcaa', []);

        return parent::getCcaa();
    }

    /**
     * {@inheritDoc}
     */
    public function setCcaa(string $ccaa): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCcaa', [$ccaa]);

        return parent::setCcaa($ccaa);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvincia(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvincia', []);

        return parent::getProvincia();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvincia(string $provincia): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvincia', [$provincia]);

        return parent::setProvincia($provincia);
    }

    /**
     * {@inheritDoc}
     */
    public function getMunicipio(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMunicipio', []);

        return parent::getMunicipio();
    }

    /**
     * {@inheritDoc}
     */
    public function setMunicipio(string $municipio): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMunicipio', [$municipio]);

        return parent::setMunicipio($municipio);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtrasEspecies(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtrasEspecies', []);

        return parent::getOtrasEspecies();
    }

    /**
     * {@inheritDoc}
     */
    public function addOtrasEspecy(\App\Entity\OtrasEspecies $otrasEspecy): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOtrasEspecy', [$otrasEspecy]);

        return parent::addOtrasEspecy($otrasEspecy);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOtrasEspecy(\App\Entity\OtrasEspecies $otrasEspecy): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOtrasEspecy', [$otrasEspecy]);

        return parent::removeOtrasEspecy($otrasEspecy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEspecie(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEspecie', []);

        return parent::getEspecie();
    }

    /**
     * {@inheritDoc}
     */
    public function setEspecie(int $especie): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEspecie', [$especie]);

        return parent::setEspecie($especie);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitasColonias(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitasColonias', []);

        return parent::getVisitasColonias();
    }

    /**
     * {@inheritDoc}
     */
    public function addVisitasColonia(\App\Entity\VisitasColonia $visitasColonia): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVisitasColonia', [$visitasColonia]);

        return parent::addVisitasColonia($visitasColonia);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemporada(): ?\App\Entity\Temporada
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemporada', []);

        return parent::getTemporada();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemporada(?\App\Entity\Temporada $temporada): \App\Entity\Colonia
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemporada', [$temporada]);

        return parent::setTemporada($temporada);
    }

}
